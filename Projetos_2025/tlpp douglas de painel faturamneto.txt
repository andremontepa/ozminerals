//Bibliotecas
#Include "TOTVS.ch"
#Include "TOPCONN.CH"
#Include "MSGRAPHI.CH"

/*/{Protheus.doc} VRMONITFAT
description
@type function
@version  
@author dougl
@since 23/09/2024
@return variant, return_description
/*/
User Function VRMONITFAT()

	Local aParamBox := {}
	Local bOk := {|| .T.}
	Local aButtons := {}
	Local lCentered := .T.
	Local nPosx
	Local nPosy
	Local cLoad := "VRMONITFAT"
	Local lCanSave := .T.
	Local lUserSave := .T.
	Local cTitulo  := ""

	Private _aStatus :={}
	Private _aTotNf := {}
	Private _aTotalGeral := {}
	//Private aTipo      := {"1-"+"Modelo 22","2-"+"Recibo","3-"+"RPS","4-"+"Danfe","5-"+"Modelo 21"}
	Private aTipo      := {"3-"+"RPS","4-"+"Danfe"}
	Private aTipoRel   := {"1-"+"Consolidado",OemtoAnsi("2-"+"Analítico")}

	Static aPergRet := {}

	//Local cFontNome   := 'Tahoma'
	//Local oFontPadrao := TFont():New(cFontNome, , -12)]

	Private dDtRefIni  := CTOD("  /  /  ")
	Private dDtRefFim  := CTOD("  /  /  ")
	Private aDados := {}
	Private aEmp   := {}
	Private cCadastro := "Monitor de notas"
	Private oDlgTree
	Private oDBTreeNFE

	dDtRefIni := FirstDate(dDataBase)
	dDtRefFim := LastDate(dDataBase)

    /*mv_par01*/AADD(aParamBox,{2, OemtoAnsi("Tipo relatório")         ,'1-Consolidado'	,aTipoRel  ,60   ,     ,.T.})
	/*mv_par02*/AADD(aParamBox,{2, "Tipo Faturamento"       ,'3-RPS'	,aTipo  ,60   ,     ,.T.})
	///*mv_par03*/AADD(aParamBox,{1, "Empresa "     ,Space(TamSx3("M0_CODFIL")[1])       ,"" 	  	      ,""   ,"SM0" ,"" ,50 ,.T.}) 

	If !ParamBox(aParamBox, cTitulo, aPergRet, bOk, aButtons, lCentered, nPosx,nPosy, /*oMainDlg*/ , cLoad, lCanSave, lUserSave)
		Return(.F.)
	EndIf

	If Rtrim(mv_par01) == OemtoAnsi("2-Analítico")
		Processa( {|| VRMONITa() } )
	ElseIf Rtrim(mv_par01) == "1-Consolidado"
		Processa( {|| VRMONITac(aEmp) } )
	EndIf

Return

/*/{Protheus.doc} VRMONITa
description
@type function
@version  
@author dougl
@since 25/09/2024
@return variant, return_description
/*/
Static function VRMONITa()

	// Declaração das variáveis
	Local cBmp1 := "PMSEDT3"
	Local nJanAltu := 870
	Local nJanLarg := 500
	Local aObjects	 := {}
	Local aPosObj 	 := {}
	Local aInfo	 	 := {}
	Local aSize	 	 := {}
	//Local oBtnFec
	Local i := 1
	Local x := 1
	Local v := 1
	Local o := 0
	Local nAtu := 1
	Local nAtuGrp := 1
	//Local nAtuPrd := 1
	Local nAtuSerie := 1
	Local nAtuStatus  := 1
	Local z  := 0
	//Local nCorFundo := RGB(240, 240, 240)
	//Local lDimPixels := .T.
	Local _nTotSerie := 0
	Local _aSerie := {}
	Local _cStatus := ""
	Local _nValorStatus  := 0
	Local _nAutorizadas := 0
	Local _nTransmitidas := 0
	Local _nNaoTrans := 0
	Local _nNaoAuto  := 0
	Local nSerie     := 0
	Local oGraphic

	//Cria os status de acordo com o padrão TOTVS campo F2_FIMP
	AAdd(_aStatus,"Nf autorizada")
	AAdd(_aStatus,OemtoAnsi("Nf não transmitida"))
	AAdd(_aStatus,"Nf transmitida")
	AAdd(_aStatus,OemtoAnsi("Nf não autorizada"))

	//Criando a janela
	aSize := MsAdvSize()
	aInfo := {aSize[1],aSize[2],aSize[3],aSize[4],3,3}

	AADD(aObjects,{100,30,.T.,.F.})
	AADD(aObjects,{100,100,.T.,.T.})
	aPosObj := MsObjSize(aInfo, aObjects)

	_aTotalGeral := U_VRTOTNF("",.F.,dDtRefIni,dDtRefFim)

	If _aTotalGeral[1] == 0
		ApMsgInfo(OemtoAnsi("Não existem dados"),"Info")
		Return
	EndIf

	DEFINE MSDIALOG oDlgTree FROM  aSize[7],0 TO aSize[6],aSize[5]  TITLE OemtoAnsi("Monitor de notas analítico tipo: "+mv_par02+" Período: "+Dtoc(dDtRefIni)+" até "+Dtoc(dDtRefFim))  STYLE DS_MODALFRAME PIXEL

	// Cria o gráfico
//	VRMONITb(_aTotalGeral,dDtRefIni,dDtRefFim,oDlgTree)

	oGraphic := TMSGraphic():New( 00,250,oDlgTree,,,RGB(239,239,239),230,150)
	oGraphic:SetMargins(2,6,6,6)
	oGraphic:SetLegenProp(GRP_SCRRIGHT, CLR_WHITE, GRP_VALUES,.T.)

	// Itens do Gráfico
	nSerie := oGraphic:CreateSerie( GRP_PIE ) // GRP_PIE=10
	// Format 3D
	oGraphic:l3D := .T.

	// Vibilidade do eixto
	oGraphic:lAxisVisib := .T.

	For i := 1 to Len(_aTotalGeral[2])
		If _aTotalGeral[2][i][5] == "S"
			_nAutorizadas += _aTotalGeral[2][i][2]
		ElseIf Empty(_aTotalGeral[2][i][5])
			_nNaoTrans += _aTotalGeral[2][i][2]
		ElseIf 	_aTotalGeral[2][i][5] == "T"
			_nTransmitidas += _aTotalGeral[2][i][2]
		ElseIf 	_aTotalGeral[2][i][5] == "N"
			_nNaoAuto += _aTotalGeral[2][i][2]
		EndIf
	Next

	oGraphic:Add(nSerie, _nAutorizadas, 'AUTORIZADAS', CLR_HGREEN )
	oGraphic:Add(nSerie, _nTransmitidas, 'TRANSMITIDAS',   CLR_HBLUE  )
	oGraphic:Add(nSerie, _nNaoTrans, OemtoAnsi('NÃO TRANSMITIDAS'), CLR_HRED)
	oGraphic:Add(nSerie, _nNaoAuto, OemtoAnsi('NÃO AUTORIZADAS'), CLR_GRAY  )

	//Criando o DbTree
	oDBTreeNFE := DBTree():New(;
		3,;                         //nTop
	3,;                             //nLeft
	(nJanAltu/2)-100,;              //nBottom
	(nJanLarg/2)-3,;                //nRight
	oDlgTree,;                      //oWnd
	{||/*fProc(oDBTreeNFE:GetCargo())*/},; //bChange
	,;                              //bRClick
	.T.;                            //lCargo
	)

	//Adiciona raíz
	oDBTreeNFE:AddTree(;
		"Tipo: "+mv_par02+"- Total: "+StrZero(_aTotalGeral[1],10)+Space(30),; //cPrompt
	.T.,;                             //lOpened
	cBmp1,;                           //cRes1
	cBmp1,;                           //cRes2
	,;                                //cFile1
	,;                                //cFile2
	cValToChar(nAtu)+".0.0.0";        //cCargo
	)

	// Exibe o mês corrente a partir da data base
	For i :=1 to Day(LastDay(dDtRefIni))

		cAxData := Substr(Dtos(dDtRefIni),1,6)+StrZero(i,2)

		//Alimenta array principal com a seleção de dados do SF2
		_aTotais := U_VRTOTNF(cAxData,.T.,dDtRefIni,dDtRefFim)

		_aSerie  := VRMONISER(cAxData)

		//Pega somente os dias que tem NF no SF2
		dbSelectArea("SF2")
		//F2_FILIAL+DTOS(F2_EMISSAO)+F2_HORA"
		dbSetOrder(16)
		If !DbSeek(xFilial("SF2")+cAxData) .Or. Len(_aSerie) == 0
			Loop
		EndIF

		//Adiciona raíz
		oDBTreeNFE:AddTree(;
			"Data : "+Dtoc(Stod(cAxData))+"- Total: "+StrZero(_aTotais[1],10)+Space(30),;               //cPrompt
		.T.,;                                          //lOpened
		cBmp1,;                                        //cRes1
		cBmp1,;                                        //cRes2
		,;                                             //cFile1
		,;                                             //cFile2
		cValToChar(nAtu)+"."+cValToChar(nAtuGrp); //cCargo
		)

		// For principal para os n´s das série na opção de tipo analítico
		For x := 1 to Len(_aSerie)

			_nTotSerie:= 0

			If oDBTreeNFE:TreeSeek(cValToChar(nAtu)+"."+cValToChar(nAtuGrp))

				For o := 1 to Len(_aTotais[2])
					If _aSerie[x] == _aTotais[2][o][3]
						_nTotSerie += _aTotais[2][o][2]
					EndIf
				Next

				oDBTreeNFE:AddTreeItem(;
					OemtoAnsi("Série: ")+PADR(_aSerie[x],3)+"- Total: "+StrZero(_nTotSerie,10)+Space(30),;                       //cPrompt
				cBmp1,;                                                           //cRes
				,;                                                                //cFile
				cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuSerie); //cCargo
				)"

			EndIf

			If oDBTreeNFE:TreeSeek(cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuSerie))

				For v := 1 to Len(_aStatus)

					_cTexto := ""

					// Nf autorizada
					If v == 1

						_cStatus      := ""
						_nValorStatus := 0

						For z := 1 to Len(_aTotais[2])
							If _aSerie[x] == _aTotais[2][z][3]
								If _aTotais[2][z][5] == 'S'
									_cStatus := _aTotais[2][z][5]
									_nValorStatus := _aTotais[2][z][2]
								EndIf
							EndIf
						Next

						If _cStatus == "S" .And. _nValorStatus > 0
							_cTexto := " - Total : "+StrZero(_nValorStatus,10)
						EndIf

						oDBTreeNFE:AddItem(_aStatus[v]+_cTexto,cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuSerie)+"."+cValToChar(nAtuStatus), "BR_VERDE",,,,2)

						// Nf não transmitida
					ElseIf 	v == 2

						_cStatus      := ""
						_nValorStatus := 0

						For z := 1 to Len(_aTotais[2])
							If _aSerie[x] == _aTotais[2][z][3]
								If Empty(_aTotais[2][z][5])
									_cStatus := _aTotais[2][z][5]
									_nValorStatus := _aTotais[2][z][2]
								EndIf
							EndIf
						Next

						If Empty(_cStatus) .And. _nValorStatus > 0
							_cTexto := " - Total : "+StrZero(_nValorStatus,10)
						EndIf

						oDBTreeNFE:AddItem(_aStatus[v]+_cTexto,cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuSerie)+"."+cValToChar(nAtuStatus), "BR_VERMELHO",,,,2)

						// Nf transmitida
					ElseIf 	v == 3

						_cStatus      := ""
						_nValorStatus := 0

						For z := 1 to Len(_aTotais[2])
							If _aSerie[x] == _aTotais[2][z][3]
								If _aTotais[2][z][5] == 'T'
									_cStatus := _aTotais[2][z][5]
									_nValorStatus := _aTotais[2][z][2]
								EndIf
							EndIf
						Next

						If _cStatus == "T" .And. _nValorStatus > 0
							_cTexto := " - Total : "+StrZero(_nValorStatus,10)
						EndIf

						oDBTreeNFE:AddItem(_aStatus[v]+_cTexto,cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuSerie)+"."+cValToChar(nAtuStatus), "BR_AZUL",,,,2)

						// Nf não autorizada
					ElseIf 	v == 4

						_cStatus      := ""
						_nValorStatus := 0

						For z := 1 to Len(_aTotais[2])
							If _aSerie[x] == _aTotais[2][z][3]
								If _aTotais[2][z][5] == 'N'
									_cStatus := _aTotais[2][z][5]
									_nValorStatus := _aTotais[2][z][2]
								EndIf
							EndIf
						Next

						If _cStatus == "N" .And. _nValorStatus > 0
							_cTexto := " - Total : "+StrZero(_nValorStatus,10)
						EndIf

						oDBTreeNFE:AddItem(_aStatus[v]+_cTexto,cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuSerie)+"."+cValToChar(nAtuStatus), "BR_PRETO",,,,2)

					EndIf

				Next

			EndIf

			nAtuSerie++

		Next

		//Finaliza raíz
		oDBTreeNFE:EndTree()

		nAtuGrp++

	Next

	//Finaliza raíz
	oDBTreeNFE:EndTree()

	//Ativa o diálogo
	oDlgTree:Activate(, , , .T.)

Return

/*/{Protheus.doc} VRMONISER
description
@type function
@version  
@author dougl
@since 23/09/2024
@param cAxData, character, param_description
@return variant, return_description
/*/
Static Function VRMONISER(cAxData)

	Local _cQuery := " "
	Local _aSerie :={}

	_cQuery := " SELECT DISTINCT F2_SERIE FROM SF2"+cEmpAnt+"0 SF2 (NOLOCK) "+CHR(13)+CHR(10)
	_cQuery += " WHERE SF2.F2_FILIAL = '"+xFilial("SF2")+"' "+CHR(13)+CHR(10)
	_cQuery += " AND SF2.D_E_L_E_T_ = '' "+CHR(13)+CHR(10)
	_cQuery += " AND F2_EMISSAO = '"+cAxData+"' "+CHR(13)+CHR(10)
	If mv_par02 == "4-Danfe"
		_cQuery += " AND ( F2_ESPECIE <> 'RPS' AND F2_SERIE <> 'RPS' ) "+CHR(13)+CHR(10)
	ElseIf mv_par02 == "3-RPS"
		_cQuery += " AND ( F2_ESPECIE =  'RPS'  ) "+CHR(13)+CHR(10)
	EndIf

	If Select("QUESER") > 0
		dbCloseArea()
	EndIf

	TCQUERY _cQuery NEW ALIAS "QUESER"

	While !Eof()

		AAdd(_aSerie,QUESER->F2_SERIE)

		QUESER->(dbSkip())
	EndDo

	QUESER->(dbCloseArea())

Return(_aSerie)

/*/{Protheus.doc} VRTOTNF
description
@type function
@version  
@author dougl
@since 23/09/2024
@param cAxData, character, param_description
@return variant, return_description
/*/
User Function VRTOTNF(cAxData,lData,dDtRefIni,dDtRefFim)

	Local _cQuery := " "
	Local _aTotNf := {}
	Local _nTotal := 0
	Local j := 0

	_cQuery := " SELECT COUNT(*) AS TOTNF, F2_FILIAL,F2_SERIE, F2_ESPECIE, "+CHR(13)+CHR(10)
	_cQuery += " F2_FIMP,F2_EMISSAO FROM SF2"+cEmpAnt+"0 SF2 (NOLOCK) "+CHR(13)+CHR(10)
	_cQuery += " WHERE SF2.F2_FILIAL = '"+xFilial("SF2")+"' "+CHR(13)+CHR(10)
	_cQuery += " AND SF2.D_E_L_E_T_ = '' "+CHR(13)+CHR(10)
	If lData
		_cQuery += " AND SF2.F2_EMISSAO = '"+cAxData+"' "+CHR(13)+CHR(10)
	Else
		_cQuery += " AND SF2.F2_EMISSAO BETWEEN '"+Dtos(dDtRefIni)+"'  AND '"+Dtos(dDtRefFim)+"' "+CHR(13)+CHR(10)
	EndIf
	If mv_par02 == "4-Danfe"
		_cQuery += " AND ( F2_ESPECIE <> 'RPS' AND F2_SERIE <> 'RPS' ) "+CHR(13)+CHR(10)
	ElseIf mv_par02 == "3-RPS"
		_cQuery += " AND ( F2_ESPECIE =  'RPS'  ) "+CHR(13)+CHR(10)
	EndIf
	_cQuery += " GROUP BY F2_FILIAL,F2_SERIE, F2_ESPECIE, F2_FIMP,F2_EMISSAO "+CHR(13)+CHR(10)
	_cQuery += " ORDER BY F2_FILIAL,F2_SERIE, F2_ESPECIE, F2_FIMP,F2_EMISSAO "+CHR(13)+CHR(10)

	If Select("QUETOTNF") > 0
		dbCloseArea()
	EndIf

	TCQUERY _cQuery NEW ALIAS "QUETOTNF"

	If QUETOTNF->TOTNF == 0
		QUETOTNF->(dbCloseArea())
		Return({0})
	EndIf

	While !Eof()

		AAdd(_aTotNf,{QUETOTNF->F2_FILIAL,QUETOTNF->TOTNF,QUETOTNF->F2_SERIE,QUETOTNF->F2_ESPECIE,QUETOTNF->F2_FIMP,QUETOTNF->F2_EMISSAO})

		QUETOTNF->(dbSkip())
	EndDo

	QUETOTNF->(dbCloseArea())

	For j := 1 to Len(_aTotNf)
		_nTotal += _aTotNf[j][2]
	Next

Return({_nTotal,_aTotNf})


/*/{Protheus.doc} VRMONITac
description
@type function
@version  
@author dougl
@since 26/09/2024
@return variant, return_description
/*/
Static function VRMONITac(aEmp)

	// Declaração das variáveis
	Local cBmp1 := "PMSEDT3"
	Local nJanAltu := 870
	Local nJanLarg := 500
	Local aObjects	 := {}
	Local aPosObj 	 := {}
	Local aInfo	 	 := {}
	Local aSize	 	 := {}
	Local cEmpPad       := cempant
	//Local oBtnFec
	Local i := 1
	//Local x := 1
	//Local v := 1
	//Local o := 0
	Local nAtu := 1
	Local nAtuGrp := 1
	Local nAtuStatus := 1
	Local z   := 0 
	Local v   := 0 
	//Local nAtuPrd := 1
	//Local nAtuEmp:= 1
	//
	//Local nAtuStatus  := 1
	///Local z  := 0
	//Local nCorFundo := RGB(240, 240, 240)
	//Local lDimPixels := .T.
	/*/
	Local _nTotEmp := 0
	Local aEmp := {}
	Local _cStatus := ""
	Local _nValorStatus  := 0
	/*/
	Local _nAutorizadas := 0
	Local _nTransmitidas := 0
	Local _nNaoTrans := 0
	Local _nNaoAuto  := 0
	Local _aTotais := {}
	Local _aTotalGeral  := {}
	Local cAxData := CTOD("  /  /  ")

	//Cria os status de acordo com o padrão TOTVS campo F2_FIMP
	AAdd(_aStatus,"Nf autorizada")
	AAdd(_aStatus,OemtoAnsi("Nf não transmitida"))
	AAdd(_aStatus,"Nf transmitida")
	AAdd(_aStatus,OemtoAnsi("Nf não autorizada"))

	DBSelectArea("SM0")
	SM0->(dbgotop())
	while !SM0->(EOF()) 
	    If SM0->M0_CODIGO == cEmpPad 
			aadd(aEmp,{cEmpPad, Rtrim(SM0->M0_CODFIL),Rtrim(SM0->M0_FILIAL)})
		EndIf
		SM0->(dbSkip())
	end

	//Criando a janela
	aSize := MsAdvSize()
	aInfo := {aSize[1],aSize[2],aSize[3],aSize[4],3,3}

	AADD(aObjects,{100,30,.T.,.F.})
	AADD(aObjects,{100,100,.T.,.T.})
	aPosObj := MsObjSize(aInfo, aObjects)

	_aTotalGeral := U_VRTOTNFc("",.F.,dDtRefIni,dDtRefFim,'')

	If _aTotalGeral[1] == 0
		ApMsgInfo(OemtoAnsi("Não existem dados"),"Info")
		Return
	EndIf

	DEFINE MSDIALOG oDlgTree FROM  aSize[7],0 TO aSize[6],aSize[5]  TITLE OemtoAnsi("Monitor de notas consolidado tipo: "+mv_par02+" Período: "+Dtoc(dDtRefIni)+" até "+Dtoc(dDtRefFim)) STYLE DS_MODALFRAME PIXEL

	// Cria o gráfico
	oGraphic := TMSGraphic():New( 00,250,oDlgTree,,,RGB(239,239,239),230,150)
	oGraphic:SetMargins(2,6,6,6)
	oGraphic:SetLegenProp(GRP_SCRRIGHT, CLR_WHITE, GRP_VALUES,.T.)

	// Itens do Gráfico
	nSerie := oGraphic:CreateSerie( GRP_PIE ) // GRP_PIE=10
	// Format 3D
	oGraphic:l3D := .T.

	// Vibilidade do eixto
	oGraphic:lAxisVisib := .T.

	For i := 1 to Len(_aTotalGeral[2])
		If _aTotalGeral[2][i][3] == "S"
			_nAutorizadas += _aTotalGeral[2][i][2]
		ElseIf Empty(_aTotalGeral[2][i][3])
			_nNaoTrans += _aTotalGeral[2][i][2]
		ElseIf 	_aTotalGeral[2][i][3] == "T"
			_nTransmitidas += _aTotalGeral[2][i][2]
		ElseIf 	_aTotalGeral[2][i][3] == "N"
			_nNaoAuto += _aTotalGeral[2][i][2]
		EndIf
	Next
	
	oGraphic:Add(nSerie, _nAutorizadas, 'AUTORIZADAS', CLR_HGREEN )
	oGraphic:Add(nSerie, _nTransmitidas, 'TRANSMITIDAS',   CLR_HBLUE  )
	oGraphic:Add(nSerie, _nNaoTrans, OemtoAnsi('NÃO TRANSMITIDAS'), CLR_HRED)
	oGraphic:Add(nSerie, _nNaoAuto, OemtoAnsi('NÃO AUTORIZADAS'), CLR_GRAY  )

	//Criando o DbTree
	oDBTreeNFE := DBTree():New(;
		3,;                         //nTop
	3,;                             //nLeft
	(nJanAltu/2)-100,;              //nBottom
	(nJanLarg/2)-3,;                //nRight
	oDlgTree,;                      //oWnd
	{||/*fProc(oDBTreeNFE:GetCargo())*/},; //bChange
	,;                              //bRClick
	.T.;                            //lCargo
	)

	//Adiciona raíz
	oDBTreeNFE:AddTree(;
		"Empresa: "+aEmp[1][1]+" - Total: "+StrZero(_aTotalGeral[1],10)+Space(100),; //cPrompt
	.T.,;                             //lOpened
	cBmp1,;                           //cRes1
	cBmp1,;                           //cRes2
	,;                                //cFile1
	,;                                //cFile2
	cValToChar(nAtu)+".0.0.0";        //cCargo
	)

	// Exibe todas as filiais da empresa corrente
	For i := 1 to Len(aEmp)
	//For i := 2 to 2 //Len(aEmp)

		//Alimenta array principal com a seleção de dados do SF2
		_aTotais := {}
		_aTotais := U_VRTOTNFC(cAxData,.T.,dDtRefIni,dDtRefFim,aEmp[i][2])

		If _aTotais[1] == 0 
		   Loop
		EndIf   

		//Adiciona raíz
		oDBTreeNFE:AddTree(;
			"Filial : "+Rtrim(aEmp[i][2])+"-"+Rtrim(aEmp[i][3])+"- Total: "+StrZero(_aTotais[1],10)+Space(100),;               //cPrompt
		.T.,;                                          //lOpened
		cBmp1,;                                        //cRes1
		cBmp1,;                                        //cRes2
		,;                                             //cFile1
		,;                                             //cFile2
		cValToChar(nAtu)+"."+cValToChar(nAtuGrp); //cCargo
		)

		If oDBTreeNFE:TreeSeek(cValToChar(nAtu)+"."+cValToChar(nAtuGrp))

				For v := 1 to Len(_aStatus)

					_cTexto := ""

					// Nf autorizada
					If v == 1

						_cStatus      := ""
						_nValorStatus := 0

						For z := 1 to Len(_aTotais[2])
							If aEmp[i][2] == _aTotais[2][z][1]
								If _aTotais[2][z][3] == 'S'
									_cStatus := _aTotais[2][z][3]
									_nValorStatus := _aTotais[2][z][2]
								EndIf
							EndIf
						Next

						If _cStatus == "S" .And. _nValorStatus > 0
							_cTexto := " - Total : "+StrZero(_nValorStatus,10)
						EndIf

						oDBTreeNFE:AddItem(_aStatus[v]+_cTexto,cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuStatus), "BR_VERDE",,,,2)

						// Nf não transmitida
					ElseIf 	v == 2

						_cStatus      := ""
						_nValorStatus := 0

						For z := 1 to Len(_aTotais[2])
							If aEmp[i][2] == _aTotais[2][z][1]
								If Empty(_aTotais[2][z][3])
									_cStatus := _aTotais[2][z][3]
									_nValorStatus := _aTotais[2][z][2]
								EndIf
							EndIf
						Next

						If Empty(_cStatus) .And. _nValorStatus > 0
							_cTexto := " - Total : "+StrZero(_nValorStatus,10)
						EndIf

						oDBTreeNFE:AddItem(_aStatus[v]+_cTexto,cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuStatus), "BR_VERMELHO",,,,2)

						// Nf transmitida
					ElseIf 	v == 3

						_cStatus      := ""
						_nValorStatus := 0

						For z := 1 to Len(_aTotais[2])
							If aEmp[i][2] == _aTotais[2][z][1]
								If _aTotais[2][z][3] == 'T'
									_cStatus := _aTotais[2][z][3]
									_nValorStatus := _aTotais[2][z][2]
								EndIf
							EndIf
						Next

						If _cStatus == "T" .And. _nValorStatus > 0
							_cTexto := " - Total : "+StrZero(_nValorStatus,10)
						EndIf

						oDBTreeNFE:AddItem(_aStatus[v]+_cTexto,cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuStatus), "BR_AZUL",,,,2)

						// Nf não autorizada
					ElseIf 	v == 4

						_cStatus      := ""
						_nValorStatus := 0

						For z := 1 to Len(_aTotais[2])
							If aEmp[i][2] == _aTotais[2][z][1]
								If _aTotais[2][z][3] == 'N'
									_cStatus := _aTotais[2][z][3]
									_nValorStatus := _aTotais[2][z][2]
								EndIf
							EndIf
						Next

						If _cStatus == "N" .And. _nValorStatus > 0
							_cTexto := " - Total : "+StrZero(_nValorStatus,10)
						EndIf

						oDBTreeNFE:AddItem(_aStatus[v]+_cTexto,cValToChar(nAtu)+"."+cValToChar(nAtuGrp)+"."+cValToChar(nAtuStatus), "BR_PRETO",,,,2)

					EndIf

				nAtuStatus++
				
				Next

			EndIf

		//Finaliza raíz
		oDBTreeNFE:EndTree()

		nAtuGrp++

	Next

	//Finaliza raíz
	oDBTreeNFE:EndTree()

	//Ativa o diálogo
	oDlgTree:Activate(, , , .T.)

Return

/*/{Protheus.doc} VRTOTNFc
description
@type function
@version  
@author dougl
@since 26/09/2024
@param cAxData, character, param_description
@param lData, logical, param_description
@param dDtRefIni, date, param_description
@param dDtRefFim, date, param_description
@return variant, return_description
/*/
User Function VRTOTNFc(cAxData,lData,dDtRefIni,dDtRefFim,_cfilial)

	Local _cQuery := " "
	Local _aTotNf := {}
	Local _nTotal := 0
	Local j := 0

	_cQuery := " SELECT COUNT(*) AS TOTNFC, F2_FILIAL, "+CHR(13)+CHR(10)
	_cQuery += " F2_FIMP FROM SF2"+cEmpAnt+"0 SF2 (NOLOCK) "+CHR(13)+CHR(10)
	_cQuery += " WHERE SF2.D_E_L_E_T_ = '' "+CHR(13)+CHR(10)
	If lData
		_cQuery += " AND SF2.F2_FILIAL = '"+_cfilial+"' "+CHR(13)+CHR(10)
	EndIf
	_cQuery += " AND SF2.F2_EMISSAO BETWEEN '"+Dtos(dDtRefIni)+"' AND '"+Dtos(dDtRefFim)+"' "+CHR(13)+CHR(10)
	If mv_par02 == "4-Danfe"
		_cQuery += " AND ( F2_ESPECIE <> 'RPS' AND F2_SERIE <> 'RPS' ) "+CHR(13)+CHR(10)
	ElseIf mv_par02 == "3-RPS"
		_cQuery += " AND ( F2_ESPECIE =  'RPS'  ) "+CHR(13)+CHR(10)
	EndIf
	_cQuery += " GROUP BY F2_FILIAL,F2_FIMP "+CHR(13)+CHR(10)
	_cQuery += " ORDER BY F2_FILIAL,F2_FIMP "+CHR(13)+CHR(10)

	If Select("QUETOTNFC") > 0
		dbCloseArea()
	EndIf

	TCQUERY _cQuery NEW ALIAS "QUETOTNFC"

	If QUETOTNFC->TOTNFC == 0
		QUETOTNFC->(dbCloseArea())
		Return({0})
	EndIf

	While !Eof()

		AAdd(_aTotNf,{QUETOTNFC->F2_FILIAL,QUETOTNFC->TOTNFC,QUETOTNFC->F2_FIMP})

		QUETOTNFC->(dbSkip())
	
	EndDo

	QUETOTNFC->(dbCloseArea())

	For j := 1 to Len(_aTotNf)
		_nTotal += _aTotNf[j][2]
	Next

Return({_nTotal,_aTotNf})
