#line 1 "c:/totvs/microsiga-teste/protheus/include\rwmake.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\stdwin.ch"
#line 14 "rwmake.ch"
#line 2 "c:\totvs\projetos_prod\compras\atualizacao workflow\\c:/totvs/projetos_prod/compras/atualizacao workflow/acomp003.prw"
#line 1 "c:/totvs/microsiga-teste/protheus/include\TbiConn.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Ap5Mail.ch"
#line 10 "TbiConn.ch"
#line 3 "c:\totvs\projetos_prod\compras\atualizacao workflow\\c:/totvs/projetos_prod/compras/atualizacao workflow/acomp003.prw"
#line 1 "c:/totvs/microsiga-teste/protheus/include\TbiCode.ch"
#line 4 "c:\totvs\projetos_prod\compras\atualizacao workflow\\c:/totvs/projetos_prod/compras/atualizacao workflow/acomp003.prw"
#line 1 "c:/totvs/microsiga-teste/protheus/include\protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Dialog.ch"
#line 28 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Font.ch"
#line 29 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\PTMenu.ch"
#line 31 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Print.ch"
#line 33 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Colors.ch"
#line 35 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Folder.ch"
#line 37 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\msobject.ch"
#line 38 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\VKey.ch"
#line 42 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\WinApi.ch"
#line 44 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\FWCommand.ch"
#line 47 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\FWCSS.CH"
#line 50 "protheus.ch"
#line 5 "c:\totvs\projetos_prod\compras\atualizacao workflow\\c:/totvs/projetos_prod/compras/atualizacao workflow/acomp003.prw"
#line 1 "c:/totvs/microsiga-teste/protheus/include\topconn.ch"
#line 29 "c:\totvs\projetos_prod\compras\atualizacao workflow\\c:/totvs/projetos_prod/compras/atualizacao workflow/acomp003.prw"
Function U_ACOMP003(nOpcao,oProcess,cNivelWF,cObsWF,cCopiaPa,lAltera,cAnexo,aTmpAprov)
Private cAviso		:= ""
Private cDestino    := ""
Private bXMSAPRO 	:= .T. 
Private cxFilial 	:= ""
Private cCodLiber	:= "000000"
Private cNivelApr	:= ""
Private lLiberou    := .F. 
Private _xUsuario   := " "
Private cNivelUser  := cNivelWF
Private cAnexoWF    := ""
Private cObse       := ""
Private cCcusto     := ""
Private cGrpAprova  := ""
Private lEnvAnexo   := .F. 
Private nHist		:= 0
Private cCopia      := " "
Private cUserpad    := SuperGetMV("MV_XUSRPAD",,"")
Private cEnvHtm     := .F. 
Private _cAltera    := ""

Private cCdUserMail := ""
Private texto1	    := ""
Private texto2	    := ""
Private texto3	    := ""
Private texto4	    := ""
Private cGerentCom  := SuperGetMV("MV_XUSGCOM",,"000033")
Private aTempAprov  := aTmpAprov

If ValType(nOpcao) = "A"
	nOpcao := nOpcao[1]
Endif

If nOpcao == NIL
	nOpcao := 0
EndIf

If cNivelWF == NIL
	cNivelWF  := ""
Endif

If cNivelUser == NIL
	cNivelUser  := ""
Endif

If aTmpAprov == NIL
	aTempAprov := {}
Else
	aTempAprov := aTmpAprov
EndIf

If cObsWF == NIL
	cObse  := ""
Else
	cObse  := "REMETENTE : "+Alltrim(capital(cUserName))
	if !Empty(cObsWF)
		cObse  += Chr(13)+Chr(10)+"OBSERVAÇÃO DE REENVIO DE LIBERAÇÃO  : "+Alltrim(cObsWF)
	EndIf
EndIf

If cCopiaPa == NIL
	cCopiaPa:= ""
Else
	cCopia += cCopiaPa
EndIf

If lAltera == NIL
	_cAltera := ""
Else
	if lAltera
		_cAltera := "Pedido Alterado pelo usuario "+Alltrim(__cUserId)+ " - " +Alltrim(capital(cUserName))
	EndIf
EndIf

if cAnexo == NIL
	cAnexoWF := ""
Else
	cAnexoWF := cAnexo

	if !Empty(cAnexoWF)
		lEnvAnexo := .T. 
	EndIf

EndIf

ConOut("Opcao:"+cValtochar(nOpcao))

If oProcess == NIL
	oProcess := TWFProcess():New( "PEDCOM", "Pedido de Compras" )
EndIf








SetPrvt("CPAR,NBARRA,N_ITEM,C_MAT,C_DEST,CGRAP")
SetPrvt("C_NUM,C_MOTIVO,N_TOTPC,CGRAPANT,N_TERMINA,N_DOHTML")
SetPrvt("CRAIZ,NRET,NHLDHTM,NHLDSCP,CIND,C_PCANT")
SetPrvt("N_QTDPC,N_FRTPC,A_ITENS,LCABEC,_AREGISTROS,NLIMITE")
SetPrvt("CAB_NUM,CAB_EMIS,CAB_FORN,CAB_COND,CAB_NOME,_NI")
SetPrvt("ARRAYCAB,ARRAYITENS,C_ITPED,NPRESUP,CAPROV,AINFO")
SetPrvt("CMAILAP,CNOMEAP,CORIGEM,CABEC,NHDLVLR,NCOUNT")
SetPrvt("NRESULT,CHTML,NHDLCONNECT")

Conout(" ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Vai entrar no Tipo De Opção: "+ alltrim(str(nOpcao)) )

Do Case
	Case nOpcao == 0
		Conout(" ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Entrando no SPCIniciar" )

		Conout(" ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Saiu no SPCIniciar" )
	Case nOpcao == 1
		Conout(" ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Entrando no SPCRetorno")
		SPCRetorno( oProcess )
		Conout(" ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Saiu no SPCRetorno")
	Case nOpcao == 2
		Conout(" ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Entrando no SPCTimeOut")
		SPCTimeOut( oProcess )
		Conout(" ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Saiu no SPCTimeOut")

	End
	Conout(" ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Saiu do Tipo Opção: "+ alltrim(str(nOpcao)) )
	Conout(" ( WF APROVAÇÃO) Data: ************************************************** PROCESSO ENCERRADO COM SUCESSO **************************************************")
	oProcess:Free()

Return()
















Static Function SPCRetorno( oProcess )
Local cTipo		:= "PC"
Local cNum		:= oProcess:oHtml:RetByName("pedido")
Local cxFilial	:= oProcess:oHtml:RetByName("FILIAL")
Local cResp		:= oProcess:oHtml:RetByName("RBAPROVA")
Local cJusti	:= oProcess:oHtml:RetByName("lbmotivo")
Local codAprov	:= oProcess:oHtml:RetByName("lb_aprovado")
Local cCopia    := ""
Local cDestino  := ""
Local xLReprova := .F. 

Conout("INICIO DE RETORNO WF APROVAÇÃO ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Iniciando 1002 ")

Conout("INICIO DE RETORNO WF APROVAÇÃO ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" codAprov1: "+ codAprov)

codAprov:= codAprov

DbSelectArea("SC7")
SC7->(dbSetOrder(1))
SC7->(dbgotop())
If SC7->(dbSeek(cxFilial+cNum))

	cGrupo 		:= SC7->C7_APROV
	cPCLib 		:= SC7->C7_NUM
	cPCUser		:= SC7->C7_USER

	Conout("RETORNO WF APROVAÇÃO ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Grupo"+cGrupo+" cPCLib: "+ cPCLib +" cPCUser: "+cPCUser)
Else
  	Conout("ERRO NAO ACHOU SC7")
Endif

If Select("SC7") > 0
	SC7->(dbCloseArea())
EndIf

  Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" cResp: " + cResp)

if cResp == "1"
	nOpc:=2
else
	nOpc:=3
endif

Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" cResp: " + cResp+" nOpc: "+alltrim(str(nOpc)))
Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Vai entrar no WHILE DO SCR CHAVE:"+cxFilial+cTipo+cNum+codAprov)

DbSelectArea("SCR")
SCR->(dbSetOrder(2))
SCR->(dbgotop())
if SCR->(dbSeek(cxFilial+cTipo+cNum))
	Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Vai entrar no if SCR->(dbSeek(cxFilial+cTipo+cNum)):"+cxFilial+cTipo+cNum)
	Conout("RETORNO WF APROVAÇÃO ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Entrou no !SCR->(EOF()) .AND. cxFilial == SCR->CR_FILIAL .AND. cNum == SCR->CR_NUM"+ cxFilial+"X"+SCR->CR_FILIAL+"X"+cNum+"X"+SCR->CR_NUM )

	While !SCR->(EOF()) .AND.  alltrim(cxFilial) == alltrim(SCR->CR_FILIAL) .AND.  alltrim(cNum) == alltrim(SCR->CR_NUM)

		Conout("RETORNO WF APROVAÇÃO ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Entrou no while !SCR->(EOF()) .AND. cxFilial == SCR->CR_FILIAL .AND. cNum == SCR->CR_NUM" )
		Conout("RETORNO WF APROVAÇÃO ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Entrou no codAprov == SCR->CR_USER"+codAprov == SCR->CR_USER )

		if codAprov == SCR->CR_USER

			Conout("RETORNO WF APROVAÇÃO ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Entrou no if codAprov == SCR->CR_USER" )

			nTotal    	:= 	SCR->CR_TOTAL
			cAprov    	:= 	SCR->CR_APROV
			cCodLiber	:=	SCR->CR_USER
			cNivelApr	:=	SCR->CR_NIVEL

			if (SCR->CR_STATUS = "03" .or.  SCR->CR_STATUS = "04")
			     Return( .F. )
			EndIf

			Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Iniciando a função de Liberação/Bloqueio ")
			Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Aprovado:  "+cAprov+" Grupo: "+cGrupo+" Justificativa: "+cJusti)

			lLiberou := U_MaAlcDocL({SCR->CR_NUM,SCR->CR_TIPO,SCR->CR_TOTAL,cAprov,,cGrupo,,,,,cJusti},date(),If(nOpc==2,4,6))

			if lLiberou
				Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Fim da função de Liberação/Bloqueio (LIBEROU)")
			Else
				xLReprova := .T. 
				Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Fim da função de Liberação/Bloqueio (BLOQUEOU)")
			Endif

			Exit

		Else

			Conout("RETORNO WF APROVAÇÃO ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" não e o liberador não e o liberador" )

        EndIf

		SCR->(dbskip())
	Enddo
Else
	Conout("RETORNO WF APROVAÇÃO ( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Não achou SCR(xxx): "+ cxFilial+cTipo+cNum+codAprov)
Endif


If lLiberou

	If Select("SC7") > 0
		SC7->(dbCloseArea())
	EndIf

	Dbselectarea("SC7")
	SC7->(dbSetOrder(1))
	SC7->(dbgotop())
	SC7->(dbseek(cxFilial+cNum))
	While !SC7->(Eof()) .AND.  SC7->C7_FILIAL+SC7->C7_NUM  == cxFilial+cNum

		if SC7->C7_FILIAL+SC7->C7_NUM  == cxFilial+cNum

			Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Iniciando a Execução o Reclock(SC7,.F.) ")

			Reclock("SC7", .F. )
				SC7->C7_CONAPRO	:= "L"
				SC7->C7_OBS		:= AllTrim(SC7->C7_OBS)+"/"+cJusti
			SC7->(MsUnlock())

			Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+"Filial:" +SC7->C7_FILIAL+" Pedido:"+SC7->C7_NUM+" Valor do SC7->C7_CONAPRO: "+SC7->C7_CONAPRO )
			Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Valor do SC7->C7_OBS: "+alltrim(SC7->C7_OBS)+" Valor do SC7->C7_CONAPRO: "+alltrim(SC7->C7_CONAPRO))
			Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Gravou SC7->(MsUnlock())")

		Endif

		SC7->(dbSkip())

	EndDo

	ConOut("( WF APROVAÇÃO) Filial: "+ cxFilial+ "Aprovando o Pedido: "+cNum )
	oProcess:Finish()
	Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Fim a oProcess:Finish() ")

Else

	ConOut("( WF APROVAÇÃO) Filial: "+ cxFilial+ "Rastreia o Pedido: "+cNum+"Processo: "+oProcess:fProcessID+"."+oProcess:fTaskID )

	oProcess:Finish()

	Dbselectarea("SC7")

	if nOpc=2

		cNivelUser := padl(Val(cNivelApr)+1,2,"0")
		ConOut("( WF APROVAÇÃO)  Filial: "+ cxFilial+ " Inicia Chama SPCIniciar" )
		Conout("SPCIniciar( oProcess,cNivelUser )  ENVIADO "+cxFilial+" "+cNum+" NIVEL "+cNivelUser)

		DbSelectArea("SC7")
		SC7->(dbSetOrder(1))
		SC7->(dbgotop())
		if SC7->(dbSeek(cxFilial+cNum))

		Conout("*************Numero do Pedido Variavel     SPCIniciar( oProcess,cNivelUser ) "+cxFilial+" "+cNum)
		Conout("****************************************************Enviando Pedido para o Proximo Nivel****************************************************")

		if !Empty(cCodLiber)

		EndIf

		Conout("****************************************************Envio de Pedido para o Proximo nivel finalizado com Sucesso****************************************************")
		Conout("SPCIniciar( oProcess,cNivelUser )  ENVIADO "+cxFilial)
		ConOut("( WF APROVAÇÃO)  Filial: "+ cxFilial+ " Fim Chama SPCIniciar" )

		EndIf
	Endif
EndIf

cTipo  :="PC"
cDocto := cNum+Space(Len(SCR->CR_NUM)-Len(cNum))

DbSelectArea("SCR")
SCR->(DbSetOrder(2))
if !SCR->(dbSeek(cxFilial+cTipo+cDocto) )
	Conout("INICIO DE RETORNO WF APROVAÇÃO (WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Não achou SCR (1): "+ xFilial("SCR")+"PC"+cDocto )
Endif

cMSGAprov := iif(nOpc=2,"APROVADO","REPROVADO")

cAviso:="NOTIFICAÇÃO - Pedido de Compra "+cMSGAprov+" - Pedido No "+cNum+" - Empresa "+IIF(SM0->M0_CODIGO = "01","AVB","VDM")+" - Filial "+cxFilial

Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" INICIANDO HTML ")



xHTM :='<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> '
xHTM +='<html xmlns="http://www.w3.org/1999/xhtml"> '
xHTM +="<head>"
xHTM +='	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /> '
xHTM +="	<title>"+cAviso+"</title>"
xHTM +="</head>"
xHTM +='<body bgcolor="#FFFFFF"> '
xHTM +="	<TABLE WIDTH=100%>"
xHTM +="		<TR>"
xHTM +='			<TH ALIGN="right" BGCOLOR="#FFFFFF">'
xHTM +='				<FONT  SIZE="5" COLOR="#FFFFFF" FACE="verdana, arial, helvetica, times" >'
xHTM +='  				<img id="_x0000_i1025" src="http://avancoresources.com/wp-content/uploads/AvancoLogo.png" border="0" width="263" height="123"></span></b></td>'
xHTM +="			</TH>"
xHTM +="		</TR>"
xHTM +="	</TABLE>"
xHTM +="	<TABLE WIDTH=100%>"
xHTM +="		<TR>"
xHTM +='			<TH ALIGN="Center" BGCOLOR="#FFFFFF"> '
xHTM +='				<FONT  SIZE="5" COLOR="#005151" FACE="verdana, arial, helvetica, times" >'
xHTM +="                <BR/>"
xHTM +="                "+cAviso+" "
xHTM +="                <BR/>"
xHTM +="                <BR/>"
xHTM +="                </FONT>"
xHTM +="			</TH> "
xHTM +='			<TH ALIGN="center" BGCOLOR="#FFFFFF">'
xHTM +='				<FONT  SIZE="5" COLOR="#005151" FACE="verdana, arial, helvetica, times" >'
xHTM +="			</TH>"
xHTM +="		</TR>"
xHTM +="		<TR>"
xHTM +='        	<TD align="left" BGCOLOR="#FFFFFF"> '
xHTM +='            	<FONT  SIZE="3" COLOR="#005151" FACE="verdana, arial, helvetica, times" > '
xHTM +="                <br/> "
xHTM +="				"+Alltrim(cAviso)+" "+dtoc(date())+"  "+time()+" "
xHTM +="                <br/> "
xHTM +="				O pedido em referencia foi "+cMSGAprov+" "
xHTM +="                <br/>"
xHTM +="                "+iif(!Empty(cJusti),"Motivo: "+cJusti,"")+" "
xHTM +="                <br/>"
xHTM +="				Data "+DTOC(date())+" Hora:"+time()+" "
xHTM +="                <br/>"
xHTM +="                Responsável "+UsrRetName(cCodLiber)+" "
xHTM +="                <br/>"
xHTM +="                </FONT>"
xHTM +="			</TD> "
xHTM +="		</TR> "
xHTM +="	</TABLE>"
xHTM +="	<br />"
xHTM +="	<hr width=100% />"
xHTM +="	<table WIDTH=100%>"
xHTM +="		<tr>"
xHTM +="			<th height=30>"
xHTM +="			</th>"
xHTM +="		</tr>"
xHTM +="		<tr>"
xHTM +='			<TD align="center" BGCOLOR="#FFFFFF">'
xHTM +='            	<FONT  SIZE="-1" COLOR="#005151" FACE="verdana, arial, helvetica, times" >'
xHTM +="				Workflow "
xHTM +="				</FONT>"
xHTM +="			</td>"
xHTM +="		</tr>"
xHTM +="	</table>"
xHTM +="<body>"
xHTM +="</body>"
xHTM +="</html>"

Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" FIM xHTM ")

dbSelectArea("SCR")
SCR->(dbSetOrder(2))
SCR->(dbgotop())
SCR->(dbSeek(cxFilial+cTipo+cNum))
While !SCR->(EOF()) .AND.   cxFilial = SCR->CR_FILIAL .and.  SCR->CR_NUM = cNum

	Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" while cxFilial=SCR->CR_FILIAL .and. SCR->CR_NUM = cNum" )
	Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Valores de cCodLiber: "+alltrim(cCodLiber)+" cNivelApr: "+alltrim(cNivelApr))
	Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Preparando para Entrarno Codigo Nivel = o Nivel para enviar todos do mesmo Nivel"+SCR->CR_USER+"<>"+cCodLiber +".and."+ cNivelApr +"="+ SCR->CR_NIVEL)

 	cDestino := UsrRetMail(SCR->CR_USER)
    cDestino := UsrRetMail(cGerentCom)


	if SCR->CR_USER <> cCodLiber .And.  cNivelApr = SCR->CR_NIVEL

		Conout("Entrou no Envio de E-mail para o Mesmo Nivel 	if SCR->CR_USER<>cCodLiber .and. cNivelApr = SCR->CR_NIVEL //Avisa o mesmo nível")

			Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Entrou no if SCR->CR_USER<>cCodLiber .and. cNivelApr=SCR->CR_NIVEL //Avisa o mesmo nível")
			Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Enviando o E-mail sem ser Nivel 01")
			Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Enviando E-MAIL PARA  "+UsrRetMail(SCR->CR_USER))

		u_EnviEmail("","Aviso"+cAviso+"","Aviso : "+cAviso+"",xHTM, .t. ,cDestino,cCopia)

	EndIf

	if SCR->CR_USER = cCodLiber

		Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Enviando Email para o Mesmo Usuario que Aprovou o Pedido de Compras")
		Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Entrou no if SCR->CR_USER<>cCodLiber .and. cNivelApr=SCR->CR_NIVEL //Avisa o Mesmo Usuario )")
		Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Enviando E-MAIL PARA  "+Alltrim(cDestino))

		u_EnviEmail("","Aviso"+cAviso+"","Aviso : "+cAviso+"",xHTM, .t. ,cDestino,cCopia)

	EndIf



	if nOpc = 3 .AND.  SCR->CR_USERLIB <> " " .AND.   SCR->CR_LIBAPRO <>  " " .AND.  SCR->CR_APROV = SCR->CR_LIBAPRO

		Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Enviando Email para todos os Aprovadores Caso o pedido seja Rejeitado")

		u_EnviEmail("","Aviso"+cAviso+"","Aviso : "+cAviso+"",xHTM, .t. ,cDestino,cCopia)

		Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Enviando Email para todos os Aprovadores Caso o pedido seja Rejeitado")

	EndIf

	if xLReprova

		Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Enviando Email para todos os Aprovadores Caso o pedido seja Rejeitado")

		u_EnviEmail("","Aviso"+cAviso+"","Aviso : "+cAviso+"",xHTM, .t. ,cDestino,cCopia)

		Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Enviando Email para todos os Aprovadores Caso o pedido seja Rejeitado")

	EndIf


	SCR->(dbskip())
Enddo



if lLiberou .or.  nOpc = 3

	Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Avisando o Comprador")

	cDestino := UsrRetMail(cPCUser)+";"+UsrRetMail(cGerentCom)



	u_EnviEmail("","Aviso"+cAviso+"","Aviso : "+cAviso+"",xHTM, .t. ,cDestino,cCopia)

EndIf

if xLReprova

	Conout("( WF APROVAÇÃO) Data: "+dtoc(ddatabase)+ "Hora: "+time()+" Avisando o Comprador")

	cDestino := UsrRetMail(cPCUser)+";"+UsrRetMail(cGerentCom)



	u_EnviEmail("","Aviso"+cAviso+"","Aviso : "+cAviso+"",xHTM, .t. ,cDestino,cCopia)

EndIf

Return()














































































































































































































































































































































































































































Static Function SPCTimeOut( oProcess )

cAviso:="NOTIFICAÇÃO - Aprovação de Pedido de Compra PENDENTE - Pedido No "+oProcess:oHtml:RetByName("Pedido")
cDestino:=UsrRetMail(WFCodUser("BI"))

xHTM := "<HTML><BODY>"
xHTM += "<hr>"
xHTM += '<p  style="word-spacing: 0; line-height: 100%; margin-top: 0; margin-bottom: 0">'
xHTM += '<b><font face="Verdana" SIZE=3>'+cAviso+" &nbsp; "+dtoc(date())+"&nbsp;&nbsp;&nbsp;"+time()+"</b></p>"
xHTM += "<hr>"
xHTM += "<br>"
xHTM += "<br>"
xHTM += "O pedido em referencia ainda não foi respondido <BR> <br>"
xHTM += "</BODY></HTML>"
ExxNVIAREMAIL("","Aviso - "+cAviso+"","Aviso - "+cAviso+"",xHTM, .t. ,cDestino)
Return()
















Function U_UltPrc(cCod)
Local aArea		:= GetArea()
Local aRet		:= {0,0,0}
Local cAlias	:= GetNextAlias()








__execSql(cAlias," SELECT DISTINCT D1_FILIAL, D1_COD, D1_DOC, D1_SERIE, D1_DTDIGIT, D1_VUNIT, D1_QUANT, D1_UM FROM  "+RetSqlName('SD1')+" SD1 WHERE SD1.D_E_L_E_T_ = ' ' AND SD1.D1_COD =  "+___SQLGetValue(CCOD)+" AND SD1.D1_TIPO = 'N' ORDER BY D1_DTDIGIT DESC",{},.F.)

_aQuery := GetLastQuery()
MemoWrite("C:\temp\wfw120p_ult_prc.txt",_aQuery[2])
If (cAlias)->(!EOF())
	_N := 1
	While (cAlias)->(!EOF()) .AND.  _N < 4
		aRet[_N] := "R$ "+alltrim(str((cAlias)->D1_VUNIT))+" - "+alltrim(str((cAlias)->D1_QUANT))+alltrim((cAlias)->D1_UM)
		_N++
		(cAlias)->(dbSkip())
	EndDo
EndIf

RestArea(aArea)
Return aRet
