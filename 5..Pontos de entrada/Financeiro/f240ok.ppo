#line 1 "c:/totvs/microsiga-teste/protheus/include\protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Dialog.ch"
#line 28 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Font.ch"
#line 29 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\PTMenu.ch"
#line 31 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Print.ch"
#line 33 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Colors.ch"
#line 35 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\Folder.ch"
#line 37 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\msobject.ch"
#line 38 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\VKey.ch"
#line 42 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\WinApi.ch"
#line 44 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\FWCommand.ch"
#line 47 "protheus.ch"
#line 1 "c:/totvs/microsiga-teste/protheus/include\FWCSS.CH"
#line 50 "protheus.ch"
#line 3 "c:\totvs\projetos_prod\5..pontos de entrada\financeiro\\c:/totvs/projetos_prod/5..pontos de entrada/financeiro/f240ok.prw"
#line 1 "c:/totvs/microsiga-teste/protheus/include\TOPCONN.CH"
#line 5 "c:\totvs\projetos_prod\5..pontos de entrada\financeiro\\c:/totvs/projetos_prod/5..pontos de entrada/financeiro/f240ok.prw"
Function U_F240OK2()
	local lRet:= .T. 
Return lRet

Function U_F240TDOK

	Local peAliasSE2 := paramixb[2]
	Local lRetorno   := .T. 
	Local aCliente   := {}
	Local nX         := 0
	Local cTexto     := " "
	Local cCgc       := " "
	Local cNome      := " "
	Local proxCGc    := " "
	Static cCodigo   := " "
	Static cLoja     := " "



	If ! Empty( paramixb[1] )
		While !(peAliasSE2)->(Eof())
			cCgc    :=    Posicione("SA2",1,xFilial("SA2")+E2_FORNECE+E2_LOJA, "A2_CGC")
			cNome   :=    Posicione("SA1",3,xFilial("SA1")+cCgc, "A1_NOME")
			cCodigo :=    Posicione("SA1",3,xFilial("SA1")+cCgc, "A1_COD")
			cLoja   :=    Posicione("SA1",3,xFilial("SA1")+cCgc, "A1_LOJA")
			If !empty(cCgc)
				If CriaTMP1() > 0 .and.  !proxCGc == cCgc
					Aadd(aCliente, {cCodigo, cLoja, cNome})
				EndIf
			EndIf
			(peAliasSE2)->(dbSkip())
			proxCGc:= cCgc
		End
	EndIf
	If Len(aCliente) > 0
		For nX := 1 to Len(aCliente)
			cTexto += "Fron.:" +E2_FORNECE+"-"+E2_LOJA+" Cli.: "+aCliente[nX][1]+"-"+aCliente[nX][2]+"   "+aCliente[nX][3]+chr(13)+chr(10)
		Next

		If !empty(cTexto)
			If !Iif(FindFunction("APMsgYesNo"), APMsgYesNo(cTexto, "Exitem Fornecedores com títulos à receber em aberto, continua?"), (cMsgYesNo:="MsgYesNo", &cMsgYesNo.(cTexto, "Exitem Fornecedores com títulos à receber em aberto, continua?")))
				lRetorno   := .F. 
			EndIf
		EndIf
	EndIf

Return lRetorno


Static Function CriaTMP1()

	Local cQuery  :=  " "
	Static nQtdTit :=  0

	cQuery := " SELECT * FROM SE1010 "
	cQuery += " WHERE E1_CLIENTE = '"+cCodigo+"' AND E1_LOJA = '"+cLoja+"' "
	cQuery += " AND E1_SALDO > 0 AND D_E_L_E_T_ = ' ' AND E1_CLIENTE <> '000009' "

	If Select("TMP1") > 0
		TMP1->(DbCloseArea())
	Endif

	dbUseArea(.T., "TOPCONN", TCGENQRY(,,cQuery), "TMP1" , .F. , .T. )

	DbSelectArea("TMP1")
	TMP1->(DbGoTop())
	nQtdTit := 0; DBEval( {|| nQtdTit := nQtdTit + 1},,,,,.F. )
	TMP1->(DbCloseArea())

Return nQtdTit
