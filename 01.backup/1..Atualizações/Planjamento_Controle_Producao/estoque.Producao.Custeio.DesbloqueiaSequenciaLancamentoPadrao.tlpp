#include "totvs.ch"
#include "Protheus.Ch"
#include "TbiConn.Ch"
#include "totvs.ch"

#define GRP_GROUP_NAME              "OZMinerals" 

#define STATUS_DESBLOQUEADO         "1"
#define STATUS_BLOQUEADO            "2"

#define STATUS_CONTABILIZA           1

namespace estoque.Producao.Custeio

/*/{Protheus.doc} DesbloqueiaSequenciaLancamentoPadrao

	Rotina que é chamada pelo Ponto de entrada MA330FIM. 
	Realiza o Desbloqueia das sequencias 001/002 dos LP´S 666/668
    
@type function
@author Fabio Santos - CRM Service
@since 09/11/2023
@version P12
@database SQL SERVER 

@Obs 

	Patametro OZ_BLKLP / OZ_SEQLP 
		Contem o numero do lançamento padrão que será Desbloqueia na contabilização
		Deve ser preenchido o parametro seguido de barra ("/")
		OZ_BLKLP : Exemplo de uso := 666/668
		OZ_SEQLP : Exemplo de uso := 001/002

    Tratamento das Queries: 

		GetQryLancamentoPadrao : Retorna dados da tabela CT5 para executar o Desbloqueia

@see MA330FIM
@see OZGENSQL
@see OZGEN18

@nested-tags:Frameworks/OZminerals
/*/ 
User Function DesbloqueiaSequenciaLancamentoPadrao(nContabiliza)
	Local aArea             := {} as array
	Local aCodigoLp         := {} as array
	Local cAlias	        := ""  as character
	Local cQuery	        := ""  as character
	Local lPermiteExecutar  := .F. as logical 

	Private cSintaxeRotina  := ""  as character
	Private cLpContabil     := ""  as character
	Private cSeqContabil    := ""  as character

	cSintaxeRotina          := ProcName(0)

	cLpContabil             := AllTrim(GetNewPar("OZ_BLKLP" ,"666/668"))
	cSeqContabil            := AllTrim(GetNewPar("OZ_SEQLP" ,"001/002"))

	aArea  		     := Lj7GetArea({"CT2", "CTT", "CTH", "CTD", "SB8", "SBF", "SB9",;
									"SB2", "SB1", "SBJ", "SBK", "SD3", "SD4", "SDQ",;
									"SD5", "SD2", "SD1", "SDB", "SDA", "SDC", "NNR",;
									"SBE","SBZ"})
	If ( !Empty(cAlias) )
		dbSelectArea(cAlias)
		(cAlias)->(dbCloseArea())
	EndIf

	If ( nContabiliza = STATUS_CONTABILIZA )

		lPermiteExecutar  := .T.
	EndIf 

	If lPermiteExecutar 

		cQuery               := GetQryLancamentoPadrao()
		cAlias               := MpSysOpenQuery(cQuery)

		If ( !Empty(cAlias) )

			DbSelectArea(cAlias)

			If ( (cAlias)->(!EOF()) )

				While (cAlias)->(!EOF())

					If ( Alltrim( (cAlias)->CT5_LANPAD) $ Alltrim(cLpContabil))

						If ( Alltrim((cAlias)->CT5_STATUS) $ Alltrim(STATUS_BLOQUEADO))

							aAdd(aCodigoLp,{AllTrim((cAlias)->CT5_LANPAD)})

						EndIf

					EndIf

					(cAlias)->(dbSkip())
				Enddo

				(cAlias)->(DbCloseArea())
			EndIf
		EndIf

		If Len(aCodigoLp) > 0
			GeraBloqueioLancamentoPadrao() 
		EndIf 
	
	EndIf

	Lj7RestArea(aArea)

Return

/*
    Função que processa o bloqueio do LP 666/668
*/
Static Function GeraBloqueioLancamentoPadrao()
	Local aArea                   := {}  as array
	Local cAlias	     		  := ""  as character
	Local cQuery	              := ""  as character

	aArea  		                  := Lj7GetArea({"CT2", "CTT", "CTH", "CTD", "SB8", "SBF", "SB9",;
												 "SB2", "SB1", "SBJ", "SBK", "SD3", "SD4", "SDQ",;
												 "SD5", "SD2", "SD1", "SDB", "SDA", "SDC", "NNR",;
												 "SBE","SBZ"})
	If ( !Empty(cAlias) )
		dbSelectArea(cAlias)
		(cAlias)->(dbCloseArea())
	EndIf

	cQuery               := GetQryLancamentoPadrao()
	cAlias               := MpSysOpenQuery(cQuery)

	If ( !Empty(cAlias) )

		dbSelectArea(cAlias)

		If ( (cAlias)->(!EOF()) )

			While ((cAlias)->(!EOF()))

					dbSelectArea("CT5")
					CT5->(dbSetOrder(1)) 
					If ( CT5->(dbSeek( (cAlias)->CT5_FILIAL + (cAlias)->CT5_LANPAD + (cAlias)->CT5_SEQUEN )))  

						If ( Alltrim( CT5->CT5_STATUS) $ Alltrim(STATUS_BLOQUEADO))
 
							Begin Transaction
								CT5->(RecLock("CT5",.F.))

									CT5->CT5_STATUS	:=	STATUS_DESBLOQUEADO
								CT5->(MsUnlock())
							End Transaction
						
						EndIf

					EndIf

				(cAlias)->(dbSkip())
			EndDo

			(cAlias)->(dbCloseArea())
		EndIf
	Else
		ShowLogInConsole("Informações não Localizadas na base de Dados")
	Endif

	Lj7RestArea(aArea)

Return

/*
    Query que retorna os dados referente a LP e sequencia
*/
Static Function GetQryLancamentoPadrao()
	Local cQuery           := "" as character

	cQuery := "SELECT   " + CRLF
	cQuery += "			CT5_FILIAL 	AS	CT5_FILIAL,   " + CRLF
	cQuery += "			CT5_LANPAD 	AS	CT5_LANPAD,   " + CRLF
	cQuery += "			CT5_SEQUEN	AS	CT5_SEQUEN,   " + CRLF
	cQuery += "			CT5_STATUS	AS	CT5_STATUS    " + CRLF
	cQuery += "FROM     " + RetSqlTab("CT5") + " (NOLOCK)  " + CRLF
	cQuery += "			WHERE 1=1               " + CRLF
	cQuery += "			AND CT5_LANPAD IN " + FormatIn(cLpContabil, "/") + " " + CRLF
	cQuery += "			AND CT5_SEQUEN IN " + FormatIn(cSeqContabil, "/") + " " + CRLF
	cQuery += "      	AND " + RetSqlDel("CT5") + CRLF

	u_ChangeQuery("\sql\DesbloqueiaSequenciaLancamentoPadrao_GetQryLancamentoPadrao.sql",@cQuery)

Return cQuery

/*
	Apresenta a Mensagem no Console do Protheus
*/
Static Function showLogInConsole(cMsg)

	libOzminerals.u_showLogInConsole(cMsg,cSintaxeRotina)

Return
